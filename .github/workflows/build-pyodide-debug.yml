# Strongly inspired from
# https://github.com/pyodide/pyodide/blob/main/.github/workflows/main.yml and
# also https://github.com/pyodide/pyodide/blob/main/.circleci/config.yml for
# the debug tweaks

name: build-pyodide-debug

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # daily scheduled build at 1am
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

concurrency:
  group: main-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build-pyodide-debug:
    runs-on: ubuntu-latest
    env:
      EMSDK_NUM_CORES: 3
      EMCC_CORES: 3
      PYODIDE_JOBS: 3
      CCACHE_DIR: /tmp/ccache

    steps:
      - name: Cache ccache output
        uses: actions/cache@v2
        with:
          path: |
            /tmp/ccache
          key: ${{ hashFiles('Makefile.envs') }}-v20211025-

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pyodide-env
          python-version: 3.10.2
          channels: conda-forge

      - name: Check Python versions
        shell: bash -l {0}
        run: |
          python --version
          which python

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          sudo apt install -y build-essential git
          conda install -y nodejs ccache f2c pkg-config swig make patch pkg-config texinfo autoconf automake libtool
          pip install -r requirements.txt

      # TODO git clone pyodide repo
      - name: clone pyodide repo
        shell: bash -l {0}
        run: |
          git clone https://github.com/pyodide/pyodide

      - name: Build emsdk
        shell: bash -l {0}
        run: |
          cd pyodide
          which ccache

          ccache -z
          make -C emsdk
          ccache -s

      - name: Build Cpython
        shell: bash -l {0}
        run: |
          cd pyodide
          # This is necessary to use the ccache from emsdk
          source pyodide_env.sh

          which ccache

          ccache -z
          make -C cpython
          ccache -s

      - name: build Pyodide core + scipy
        shell: bash -l {0}
        run: |
          cd pyodide
          # This is necessary to use the ccache from emsdk
          source pyodide_env.sh
          ccache -z
          EXTRA_CFLAGS=-g2 EXTRA_LDFLAGS=-g2 PYODIDE_PACKAGES="core,numpy,scipy,scikit-learn" make
          ccache -s

      - name: build Pyodide debug
        shell: bash -l {0}
        run: |
          cd pyodide
          rm dist/pyodide.asm.js
          PYODIDE_DEBUG=1 make dist/pyodide.asm.js
          cd dist
          npx prettier -w pyodide.asm.js
          npx prettier -w pyodide.js

      - name: check-size
        run: ls -lh pyodide/dist/

      - name: Store artifacts build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./pyodide/dist/
          retention-days: 60
